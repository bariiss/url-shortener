name: Build and Push Multi-Arch URL Shortener to GHCR

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "debug"
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: "Test scenario tags"
        required: false
        type: boolean
      environment:
        description: "Environment to run tests against"
        type: environment
        required: false

jobs:
  build:
    name: Build and Push Multi-Arch URL Shortener Image
    runs-on: [self-hosted]
    if: contains(github.event.head_commit.message, '#build')
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: 'image=moby/buildkit:master'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.MY_PAT_TOKEN }}

      - name: Extract repository name
        id: repo_name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_OUTPUT

      - name: Generate unique ID for image tag
        id: uuid
        run: echo "uid=$(date +%s%N | sha256sum | head -c 8)" >> $GITHUB_OUTPUT

      - name: Build and push URL Shortener image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ steps.repo_name.outputs.REPO_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ steps.repo_name.outputs.REPO_NAME }}:build-${{ steps.uuid.outputs.uid }}
          labels: |
            org.opencontainers.image.description=Multi-Arch ${{ steps.repo_name.outputs.REPO_NAME }} Image
          build-args: |
            BUILDPLATFORM=${{ runner.os }}/${{ runner.arch }}
            NO_CACHE=true
          provenance: false
